/* ###################################################################
**     Filename    : ProcessorExpert.c
**     Project     : ProcessorExpert
**     Processor   : MKL25Z128VLK4
**     Version     : Driver 01.01
**     Compiler    : GNU C Compiler
**     Date/Time   : 2022-10-27, 14:50, # CodeGen: 0
**     Abstract    :
**         Main module.
**         This module contains user's application code.
**     Settings    :
**     Contents    :
**         No public methods
**
** ###################################################################*/
/*!
** @file ProcessorExpert.c
** @version 01.01
** @brief
**         Main module.
**         This module contains user's application code.
*/         
/*!
**  @addtogroup ProcessorExpert_module ProcessorExpert module documentation
**  @{
*/         
/* MODULE ProcessorExpert */


/* Including needed modules to compile this module/procedure */
#include "Cpu.h"
#include "Events.h"
#include "CC.h"
#include "BitsIoLdd1.h"
#include "CA.h"
#include "BitsIoLdd2.h"
#include "Int0.h"
#include "BitsIoLdd3.h"
#include "Int1.h"
#include "BitsIoLdd4.h"
#include "EInt0.h"
#include "ExtIntLdd1.h"
#include "EInt1.h"
#include "ExtIntLdd2.h"
/* Including shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"

/* User includes (#include below this line is not maintained by Processor Expert) */

/*lint -save  -e970 Disable MISRA rule (6.3) checking. */
int main(void)
/*lint -restore Enable MISRA rule (6.3) checking. */
{
  /* Write your local variable definition here */

  /*** Processor Expert internal initialization. DON'T REMOVE THIS CODE!!! ***/
  PE_low_level_init();
  /*** End of Processor Expert internal initialization.                    ***/

  /* Write your code here */
  while(1)
    {
	
	   unsigned char a=0xf;
	   unsigned char b;
	   unsigned char c;
	   int i;
	   int j;
	 b = 0x8;

for( j=0;j<8;j++)	 {
	  
	 
	 c = a^b;
	  CA_PutVal(c);
	  for(i=0;i<0x7ffff;i++);
	  b = (b>>1);
}
	
	   unsigned char d=0x0;
	   unsigned char e;
	   unsigned char f;
	   int x;
	   int y;
	 e = 0x8;
	 
for( x=0;x<8;x++)	 {
	  
	 
	 f = d^e;
	 CC_PutVal(f);
	  for(y=0;y<0x7ffff;y++);
	  e = (e>>1);

	
	  
}
}
	
	
  /* For example: for(;;) { } */

  /*** Don't write any code pass this line, or it will be deleted during code generation. ***/
  /*** RTOS startup code. Macro PEX_RTOS_START is defined by the RTOS component. DON'T MODIFY THIS CODE!!! ***/
  #ifdef PEX_RTOS_START
    PEX_RTOS_START();                  /* Startup of the selected RTOS. Macro is defined by the RTOS component. */
  #endif
  /*** End of RTOS startup code.  ***/
  /*** Processor Expert end of main routine. DON'T MODIFY THIS CODE!!! ***/
  for(;;){}
  /*** Processor Expert end of main routine. DON'T WRITE CODE BELOW!!! ***/
} /*** End of main routine. DO NOT MODIFY THIS TEXT!!! ***/

/* END ProcessorExpert */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.3 [05.08]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
